# -*- coding: utf-8 -*-
"""fred api.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1G7cOd_164Rcb3svmUUhXGe3pfobChYoT
"""





import pandas as pd

import os
from flask import Flask, request, jsonify
import requests

app = Flask(__name__)

FRED_API_KEY = os.environ.get("7905f7bbc5a1357b2fd7e96a77ad9abe")  # Set this in Render's environment variables

FRED_BASE_URL = "https://api.stlouisfed.org/fred"

def get_fred_observations(series_id, observation_start=None, observation_end=None):
    url = f"api.stlouisfed.org/fred/series/observations"
    params = {
        "series_id": series_id,
        "api_key": FRED_API_KEY,
        "file_type": "json"
    }
    if observation_start:
        params["observation_start"] = observation_start
    if observation_end:
        params["observation_end"] = observation_end
    resp = requests.get(url, params=params)
    if resp.status_code == 200:
        return resp.json()
    else:
        return {"error": resp.text, "status": resp.status_code}

def get_fred_series(series_id):
    url = f"api.stlouisfed.org/fred/series"
    params = {
        "series_id": series_id,
        "api_key": FRED_API_KEY,
        "file_type": "json"
    }
    resp = requests.get(url, params=params)
    if resp.status_code == 200:
        return resp.json()
    else:
        return {"error": resp.text, "status": resp.status_code}

@app.route("/")
def home():
    return (
        "FRED API App is running!<br>"
        "Use /observations?series_id=... to get data observations.<br>"
        "Use /series?series_id=... to get series metadata."
    )

@app.route("/observations")
def observations():
    series_id = request.args.get("series_id")
    observation_start = request.args.get("observation_start")
    observation_end = request.args.get("observation_end")
    if not series_id:
        return jsonify({"error": "series_id is required"}), 400
    data = get_fred_observations(series_id, observation_start, observation_end)
    return jsonify(data)

@app.route("/series")
def series():
    series_id = request.args.get("series_id")
    if not series_id:
        return jsonify({"error": "series_id is required"}), 400
    data = get_fred_series(series_id)
    return jsonify(data)

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=10000)